let listening=!1,targets=[];const defaultOptions={speed:.3,mobilePx:!1};class RallaxObj{constructor(t,{speed:e,mobilePx:i}){this.speed=e||defaultOptions.speed,this.mobilePx=i||defaultOptions.mobilePx,this.mobileDisable=!1,this.conditions=[],this.active=!0,this.target=t,"string"==typeof t&&(this.target=document.querySelector(`${t}`)),this.winHeight=window.innerHeight,this.accumulated=0,this.getRect(),this.startScroll=this.targetR.top-this.winHeight>0?this.targetR.top-this.winHeight:0}stop(){this.active=!1}start(){this.active=!0}getSpeed(){return this.speed}changeSpeed(t){this.inWindow()&&t!==this.speed&&(this.accumulated=this.getTranslation(),this.startScroll=this.scrollY()),this.speed=t}when(t,e){return this.conditions.push({condition:t,action:e}),this}scrollY(){return window.scrollY||window.pageYOffset}getTranslation(){const t=(this.scrollY()-this.startScroll)*this.speed+this.accumulated;return t>=0?t:0}getRect(){return this.targetR=this.target.getBoundingClientRect(),this.targetR}inWindow(){this.getRect();const t=this.targetR.top,e=this.targetR.bottom;return t<this.winHeight&&e>0}move(){this.target.style.transform=`translateY(${this.getTranslation()}px)`}}const addListener=()=>{window.addEventListener("scroll",(t=>{controller(targets)})),window.addEventListener("resize",(t=>{resize()}))},controller=t=>{requestAnimationFrame((()=>{t.forEach((t=>{t.mobileDisable||(t.conditions.forEach((({condition:t,action:e})=>{t()&&e()})),t.active&&t.move())}))}))},resize=()=>{const t=window.innerWidth;targets.forEach((e=>{e.mobilePx>=t&&(e.mobileDisable=!0)}))};export default(t,e={})=>{const i=new RallaxObj(t,e);return targets.push(i),resize(),listening||(window.addEventListener("scroll",(t=>{controller(targets)})),window.addEventListener("resize",(t=>{resize()})),listening=!0),i};